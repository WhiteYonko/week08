name: Backend CI

on:
  workflow_dispatch:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"

jobs:
  test_and_lint_backends:
    name: Test & Lint (product_service, order_service)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        svc: [product_service, order_service]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dev requirements
        working-directory: backend/${{ matrix.svc }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        working-directory: backend/${{ matrix.svc }}
        run: |
          if [ -d tests ]; then pytest -q; else echo "No tests/ directory, skipping."; fi

  build_and_push_images:
    name: Build & Push images to ACR
    runs-on: ubuntu-latest
    needs: [test_and_lint_backends]
    env:
      # pulled from repo Settings → Actions → Variables
      ACR_NAME: ${{ vars.ACR_NAME }}
      ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Echo ACR vars
        run: |
          echo "ACR_NAME=$ACR_NAME"
          echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER"

      - name: Login to Azure Container Registry
        run: az acr login -n "$ACR_NAME"

      - name: Build and Push Product Service Image
        run: |
          docker build -t "$ACR_LOGIN_SERVER/product-service:${{ github.sha }}" backend/product_service
          docker push     "$ACR_LOGIN_SERVER/product-service:${{ github.sha }}"
          docker tag      "$ACR_LOGIN_SERVER/product-service:${{ github.sha }}" "$ACR_LOGIN_SERVER/product-service:latest"
          docker push     "$ACR_LOGIN_SERVER/product-service:latest"

      - name: Build and Push Order Service Image
        run: |
          docker build -t "$ACR_LOGIN_SERVER/order-service:${{ github.sha }}" backend/order_service
          docker push     "$ACR_LOGIN_SERVER/order-service:${{ github.sha }}"
          docker tag      "$ACR_LOGIN_SERVER/order-service:${{ github.sha }}" "$ACR_LOGIN_SERVER/order-service:latest"
          docker push     "$ACR_LOGIN_SERVER/order-service:latest"
